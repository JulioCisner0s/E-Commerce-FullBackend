<div class="container mt-5">
    <h1 class="text-center">Todas las Compras</h1>
    
    {{#if purchases.length}}
    <table class="table table-bordered table-hover mt-4">
        <thead>
            <tr>
                <th>Código</th>
                <th>Fecha de Compra</th>
                <th>Comprador</th>
                <th>Productos</th>
                <th>Total</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            {{#each purchases}}
            <tr>
                <td>{{this.code}}</td>
                <td><span class="formatted-date" data-date="{{this.purchase_datetime}}"></span></td>
                <td>{{this.purchaser}}</td>
                <td>
                    <ul>
                        {{#each this.products}}
                        <li>{{this.product.name}} (x{{this.quantity}})</li>
                        {{/each}}
                    </ul>
                </td>
                <td>${{this.amount}}</td>
                <td>
                    <button class="btn btn-danger delete-purchase-btn" data-id="{{this._id}}">Eliminar</button>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
    {{else}}
    <p>No hay compras registradas.</p>
    {{/if}}
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const deleteButtons = document.querySelectorAll('.delete-purchase-btn')
        
        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const purchaseId = this.getAttribute('data-id')
                
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "Esta acción no se puede deshacer",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Sí, eliminar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/deletePurchase/${purchaseId}`, {
                            method: 'DELETE',
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire('Eliminado', 'La compra ha sido eliminada.', 'success')
                                window.location.reload()
                            } else {
                                Swal.fire('Error', 'Hubo un problema al eliminar la compra.', 'error')
                            }
                        })
                    }
                })
            })
        })
    })

    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.formatted-date').forEach(function(span) {
            const date = new Date(span.getAttribute('data-date'))
            const formattedDate = date.toLocaleDateString('es-ES', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            })
            span.textContent = formattedDate
        })
    })
</script>

<style>
    .table-hover tbody tr:hover {
        background-color: #f5f5f5;
        cursor: pointer;
    }
</style>